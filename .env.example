# üîê CRITICAL SECURITY ENVIRONMENT VARIABLES
# All these variables are REQUIRED for production security

# Blockchain Configuration
WALLET_PRIVATE_KEY="your_game_server_wallet_private_key_here"
ALCHEMY_RPC_URL="your_primary_alchemy_rpc_url"
ALCHEMY_RPC_URL_2="your_backup_alchemy_rpc_url_2"
ALCHEMY_RPC_URL_3="your_backup_alchemy_rpc_url_3"
ALCHEMY_RPC_URL_4="your_backup_alchemy_rpc_url_4"
ALCHEMY_RPC_URL_5="your_backup_alchemy_rpc_url_5"

# Security Keys
API_SECRET="your_super_secure_api_secret_64_chars_minimum_random_string_here"
CSRF_SECRET="your_super_secure_csrf_secret_64_chars_minimum_random_string_here"

# NEW: 3-Key Cryptographic Validation System Secrets
# Bu anahtarlarƒ± g√ºvenli ≈üekilde olu≈üturun ve asla payla≈ümayƒ±n!
# Her anahtar 32 byte (64 hex karakter) olmalƒ±dƒ±r
CRYPTO_TEMPORAL_SECRET="your_temporal_validation_secret_64_hex_chars"
CRYPTO_PAYLOAD_SECRET="your_payload_validation_secret_64_hex_chars"  
CRYPTO_IDENTITY_SECRET="your_identity_validation_secret_64_hex_chars"

# Application Configuration
NEXT_PUBLIC_APP_URL="https://chopupnad.vercel.app"

# üö® SECURITY CHECKLIST FOR PRODUCTION:
# ‚úÖ 1. Generate cryptographically secure random strings for API_SECRET and CSRF_SECRET
# ‚úÖ 2. Generate 3 separate crypto validation secrets using: crypto.randomBytes(32).toString('hex')
# ‚úÖ 3. Set proper CORS origins in NEXT_PUBLIC_APP_URL
# ‚úÖ 2. Use a dedicated game server wallet with GAME_ROLE permissions
# ‚úÖ 3. Set up multiple RPC URLs for redundancy
# ‚úÖ 4. Ensure NEXT_PUBLIC_APP_URL matches your production domain exactly
# ‚úÖ 5. Never commit this file to git - add to .gitignore
# ‚úÖ 6. Rotate secrets regularly (monthly recommended)
# ‚úÖ 7. Monitor for unusual API usage patterns

# EXAMPLES OF SECURE SECRET GENERATION:
# node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
# openssl rand -hex 32
# python3 -c "import secrets; print(secrets.token_hex(32))"